package c

import (
    "github.com/ixre/goex/echox"
    "github.com/ixre/gof"
    "strconv"
    "errors"
    "net/http"
    "{{.VAR.ModelPkg}}"
    "github.com/ixre/gof/web/form"
    "github.com/ixre/gof/util"
)

{{$c := try_get .columns "update_time"}}
{{if $c }}haha{{$c.Prop}}{{end}}

type {{.table.Title}}C struct{
}

/** {{.table.Comment }} - {{.table.Title}} **/

// {{.table.Comment}}列表
func ({{.Ptr}} *{{.table.Title}}C) {{.table.Title}}List(c *echox.Context) error {
    d := c.NewData()
    return c.RenderOK("{{.table.Prefix}}/{{.table.Name}}_list.html", d)
}

// 创建{{.table.Comment}}
func ({{.Ptr}} *{{.table.Title}}C) Create{{.table.Title}}(c *echox.Context) error {
    e := &model.{{.table.Title}}{}
    d := c.NewData()
    d.Map["Entity"] = util.MustHtmlJson(e)
    return c.RenderOK("{{.table.Prefix}}/{{.table.Name}}_edit.html", d)
}

// 修改{{.table.Comment}}
func ({{.Ptr}} *{{.table.Title}}C) Edit{{.table.Title}}(c *echox.Context) error {
    id, err := util.I32Err(strconv.Atoi(c.QueryParam("id")))
    if err != nil {
        return nil
    }
    e := {{.Ptr}}.Get{{.table.Title}}_(id)
    d := c.NewData()
    d.Map["Entity"] = util.MustHtmlJson(e)
    return c.RenderOK("{{.table.Prefix}}/{{.table.Name}}_edit.html", d)
}

// 保存{{.table.Comment}}
func ({{.Ptr}} *{{.table.Title}}C) Save{{.table.Title}}(c *echox.Context)(err error){
    if !c.IsPost(){
        return nil
    }
    rst := gof.Result{}
    req := c.Request()
    req.ParseForm()
    e := model.{{.table.Title}}{}
    form.ParseEntity(req.Form, &e)
    if r, _ := {{.Ptr}}.Save{{.table.Title}}_(&e);r.Result_{
       rst.Data = r.Data;
    }else{
       err = errors.New(r.ErrMsg)
    }
    return c.JSON(http.StatusOK, rst.Error(err))
}

// 删除{{.table.Comment}}
func ({{.Ptr}} *{{.table.Title}}C) Del{{.table.Title}}(c *echox.Context)(err error) {
    if !c.IsPost(){
       return nil
    }
    rst := gof.Result{}
    id, err := util.I32Err(strconv.Atoi(c.FormValue("id")))
    if err == nil{
        if r,_ := {{.Ptr}}.Delete{{.table.Title}}_(id);!r.Result_{
            err = errors.New(r.ErrMsg)
        }
    }
    return c.JSON(http.StatusOK, rst.Error(err))
}


// 获取{{.table.Comment}}
func ({{.Ptr}} *{{.table.Title}}C) Get{{.table.Title}}_(id int32)(*model.{{.table.Title}}){
   return nil
}

// 保存{{.table.Comment}}
func ({{.Ptr}} *{{.table.Title}}C) Save{{.table.Title}}_(v *model.{{.table.Title}})(*ttype.Result_, error){
   return &ttype.Result_{Result_:true},nil
}

// 删除{{.table.Comment}}
func ({{.Ptr}} *{{.table.Title}}C) Delete{{.table.Title}}_(id int32)(*ttype.Result_, error){
   return &ttype.Result_{Result_:true},nil
}
